package view.employeGestion;

import dbGestion.Requets;
import model.Employer;
import model.Notification;
import services.NotificationService;

import java.util.List;
import java.util.Scanner;

public class EspaceEmploye {
    public Requets requets = new Requets();
    static Scanner sc = new Scanner(System.in);
    private NotificationService service = new NotificationService();

    private List<Employer> tousLesEmployes = requets.getAllEmploye();

    public EspaceEmploye(){}


    //Pour l'espace employ√©s :
    public void menu(String email) {

        // V√©rifier si l‚Äôemploy√© existe
        Employer employeConnecte = null;
        for (Employer emp : tousLesEmployes) {
            if (emp.getEmail().equalsIgnoreCase(email)) {
                employeConnecte = emp;
                break;
            }
        }

        if (employeConnecte == null) {
            System.out.println("‚ùå Email non reconnu. Veuillez contacter l‚Äôadministrateur.");
            pause();
            return;
        }

        int choix;
        do {
            System.out.println("\n===============================");
            System.out.println("üë§ ESPACE DE " + employeConnecte.getPrenom().toUpperCase());
            System.out.println("===============================\n");
            System.out.println("1Ô∏è‚É£  Voir mes notifications");
            System.out.println("2Ô∏è‚É£  Me d√©sabonner");
            System.out.println("3Ô∏è‚É£  Me r√©abonner");
            System.out.println("0Ô∏è‚É£  Quitter l‚Äôespace");
            System.out.print("üëâ Votre choix : ");

            while (!sc.hasNextInt()) {
                System.out.print("‚ùå Entrez un chiffre valide : ");
                sc.next();
            }
            choix = sc.nextInt();
            sc.nextLine();

            switch (choix) {
                case 1 -> {
                    System.out.println("\nüì® Vos notifications :");
                    List<Notification> notifs = service.notificationsPour(email);
                    if (notifs.isEmpty()) {
                        System.out.println("üì≠ Aucune notification re√ßue.");
                    } else {
                        for (Notification n : notifs) {
                            System.out.println("üìÖ " + n.getDate() + " - üìù " + n.getMessage());
                        }
                    }
                    pause();
                }

                case 2 -> {
                    if (!service.estAbonner(email)) {
                        System.out.println("‚ö†Ô∏è Vous n'√™tes pas encore abonn√©.");
                    } else {
                        service.desabonner(email);
                        System.out.println("‚ùå Vous avez √©t√© d√©sabonn√© avec succ√®s.");
                    }
                    pause();
                }

                case 3 -> {
                    if (service.estAbonner(email)) {
                        System.out.println("‚úÖ Vous √™tes d√©j√† abonn√©.");
                    } else {
                        service.abonner(email);
                        System.out.println("üîÅ Vous avez √©t√© r√©abonn√© avec succ√®s.");
                    }
                    pause();
                }

                case 0 -> {
                    System.out.println("üëã D√©connexion de l‚Äôespace employ√©.");
                    pause();
                }

                default -> {
                    System.out.println("‚ùó Choix invalide. R√©essayez.");
                    pause();
                }
            }

        } while (choix != 0);
    }

    private void pause(){
        System.out.print("Appuyez sur enter pour continuer .....");
        sc.nextLine();
    }
}
